{"version":3,"sources":["store/Main/types.ts","theme/defaultTheme.ts","store/Main/state.ts","store/Main/reducer.ts","store/index.ts","store/Main/actions.ts","config.ts","store/allActions.ts","components/table/styles.ts","components/table/row.tsx","components/table/index.tsx","components/form/styles.ts","components/form/input.tsx","components/button.ts","components/title.ts","components/main_wrapper.ts","components/popup/styles.ts","components/popup/index.tsx","views/list/styles.ts","containers/task/styles.ts","containers/task/index.tsx","views/list/newTask.tsx","views/list/index.tsx","views/task/styles.ts","views/task/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ACTIONS_TYPES","STATUS","MainTheme","borderRadius","breakpoints","mobile","tablet","hd","fullHD","colors","main","second","fonts","error","hover","input","background","backgroundFocus","sizes","desctop","max","breakpoint","min","defaultState","taskList","items","status","SUCCESS","updateAction","id","deleteAction","createAction","reducer","state","action","type","GET_TASK_LIST","payload","CREATE_TASK","push","title","UPDATE_TASK","index","findIndex","DELETE_TASK","splice","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","combineReducers","MainReducer","store","createStore","applyMiddleware","thunk","useThunkDispatch","useDispatch","TASK_API","getList","uri","method","create","update","delete","getTaskList","createTask","updateTask","deleteTask","Main","getTaskListAsync","dispatch","getState","a","LOADING","fetch","response","ok","Error","json","data","success","ERROR","message","deleteTaskAsync","createTaskAsync","body","JSON","stringify","updateTaskAsync","Table","styled","table","theme","Row","tr","Cell","td","Basket","svg","Pancel","React","memo","item","onDelete","onEdit","cells","Object","keys","map","prop","key","onClick","xlinkHref","prevProps","nextProps","handleDelete","useCallback","handleEdit","Rows","InputWrapper","div","InputField","Field","InputLabel","label","InputErrorDescription","span","Input","props","htmlFor","Button","button","color","Title","h1","MainWrapper","Overlay","Wrapper","Cross","Background","Popup","children","visibility","onClose","root","document","getElementById","useEffect","style","overflow","handleClose","e","target","dataset","close","createPortal","CSSTransition","in","classNames","timeout","Fragment","className","data-close","TitleWrapper","ChildrenWrapper","align","Task","description","disabled","onSuccess","onFocus","onBlur","onSubmit","onChange","initialValues","handleSubmit","actions","setErrors","handleFocus","customHandleBlur","handleChangeCustom","value","enableReinitialize","validate","errors","length","handleChange","handleBlur","name","Actions","List","useState","popup","setPopup","useSelector","history","useHistory","closePopup","Container","ButtonWrapper","TaskView","useParams","setTitle","cachedTask","useRef","edit","setEdit","find","parseInt","current","prevTitle","to","App","exact","path","render","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.b744e627.chunk.js","sourcesContent":["export enum ACTIONS_TYPES{\r\n    SET_VIEWPORT_WIDTH  = '@@main/SET_VIEWPORT_WIDTH',\r\n    GET_TASK_LIST = '@@main/GET_TASK_LIST',\r\n    UPDATE_TASK = '@@main/UPDATE_TASK',\r\n    CREATE_TASK = '@@main/CREATE_TASK',\r\n    DELETE_TASK = '@@main/DELETE_TASK'\r\n}\r\n\r\nexport enum STATUS {\r\n    SUCCESS = 'SUCCESS',\r\n    LOADING = 'LOADING',\r\n    ERROR = 'ERROR'\r\n}","import { DefaultTheme } from 'styled-components'\r\n\r\nexport const MainTheme: DefaultTheme = {\r\n  borderRadius: '4px',\r\n  breakpoints: {\r\n      mobile: '375px',\r\n      tablet: '768px',\r\n      hd: '1024px',\r\n      fullHD: '1920px',\r\n  },  \r\n  colors: {\r\n    main: '#ffffff',\r\n    second: '#000000',\r\n    fonts: {\r\n        main: '#000000',\r\n        error: '#FF0000',\r\n        hover: '#ffffff'\r\n    },\r\n    input: {\r\n        background : '#F2F2F2',\r\n        backgroundFocus: '#ffffff'\r\n    }\r\n  },\r\n  fonts: {\r\n      sizes: {\r\n          mobile: 14,\r\n          tablet: 16,\r\n          desctop: 20,\r\n      }\r\n  },\r\n  max: (breakpoint) => `@media (max-width: ${breakpoint})`,\r\n  min: (breakpoint) => `@media (min-width: ${breakpoint})`\r\n}","import {Task} from '@models/TaskDTO';\r\nimport {STATUS} from './types';\r\nexport interface MainState {\r\n    taskList : {\r\n        items : Task[]\r\n        status: STATUS\r\n        error: string\r\n    },\r\n\r\n    updateAction: {\r\n        id: number | null;\r\n        status: STATUS;\r\n    },\r\n    deleteAction: {\r\n        id: number | null;\r\n        status: STATUS;\r\n    },\r\n    createAction: {\r\n        status: STATUS;\r\n    },\r\n}\r\n\r\n\r\nexport const defaultState : MainState = {\r\n    taskList: {\r\n        items: [],\r\n        status: STATUS.SUCCESS,\r\n        error: ''\r\n    },\r\n    updateAction: {\r\n        id: null,\r\n        status: STATUS.SUCCESS\r\n    },\r\n    deleteAction: {\r\n        id: null,\r\n        status: STATUS.SUCCESS\r\n    },\r\n    createAction: {\r\n        status: STATUS.SUCCESS\r\n    },\r\n}","import {Reducer} from 'redux';\r\nimport {AllActions} from './actions';\r\nimport {ACTIONS_TYPES,STATUS} from './types';\r\nimport {MainState,defaultState} from './state';\r\n\r\n\r\n\r\n\r\nconst reducer : Reducer<MainState,AllActions> = (state = defaultState,action) => {\r\n    switch(action.type) {\r\n        case ACTIONS_TYPES.GET_TASK_LIST: {\r\n          const payload = action.payload;\r\n          const taskList = state.taskList;\r\n          return {...state, taskList : {\r\n            ...taskList,...payload\r\n          }}\r\n        }\r\n\r\n        case ACTIONS_TYPES.CREATE_TASK: {\r\n            const payload = action.payload;\r\n            const taskList = state.taskList;\r\n            if(!payload.error && payload.status === STATUS.SUCCESS) {\r\n                taskList.items.push({\r\n                    id: payload.id as number,\r\n                    title: payload.title as string,\r\n                })\r\n            }\r\n            if(payload.error) {\r\n                state.taskList.error = payload.error;\r\n            }\r\n            return {...state, taskList : {...taskList,items: taskList.items},createAction: {...state.createAction,...payload}};\r\n        }\r\n\r\n        case ACTIONS_TYPES.UPDATE_TASK: {\r\n            const payload = action.payload;\r\n            const taskList = state.taskList;\r\n            if(payload.status === STATUS.SUCCESS) {\r\n                const index = taskList.items.findIndex(({id}) => id === payload.id);\r\n                if(index !== -1 && payload.title) {\r\n                    taskList.items[index].title = payload.title; \r\n                }\r\n            }\r\n            if(payload.error) {\r\n                state.taskList.error = payload.error;\r\n            }\r\n            return {...state,taskList: {...taskList,items: [...taskList.items]},updateAction: {...state.updateAction,...payload}}\r\n        }\r\n\r\n        case ACTIONS_TYPES.DELETE_TASK: {\r\n            const payload = action.payload;\r\n            const taskList = state.taskList;\r\n            if(payload.status === STATUS.SUCCESS) {\r\n                const index = taskList.items.findIndex(({id}) => id === payload.id);\r\n                if(index !== -1) {\r\n                    taskList.items.splice(index,1);\r\n                }\r\n            }\r\n            if(payload.error) {\r\n                state.taskList.error = payload.error;\r\n            }\r\n            return {...state,taskList: {...taskList,items: [...taskList.items]},deleteAction: {...state.deleteAction,...payload}}\r\n        }\r\n\r\n        default: {\r\n            return {...state};\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n\r\n","import {\r\n    createStore,\r\n    combineReducers,\r\n    applyMiddleware,\r\n    compose,\r\n    Reducer,\r\n} from 'redux';\r\nimport {useDispatch} from 'react-redux';\r\nimport {ApplicationState,AllActions} from './configs'\r\nimport MainReducer from './Main/reducer';\r\n\r\n\r\nimport thunk, {ThunkMiddleware} from 'redux-thunk';\r\n\r\ndeclare global {\r\n    interface Window {\r\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst reducer : Reducer<ApplicationState,AllActions> = combineReducers({\r\n    main : MainReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk as ThunkMiddleware<ApplicationState, AllActions>),\r\n    ),\r\n);\r\n\r\nexport const useThunkDispatch = () => useDispatch<typeof store.dispatch>();\r\n\r\nexport default store;","import {Action} from 'redux';\r\nimport {ACTIONS_TYPES,STATUS} from './types';\r\nimport * as TaskDTO from '@models/TaskDTO';\r\nimport configs from '../../config';\r\nimport {ThunkResult} from '@store/configs';\r\n\r\nconst {endpoints : {TASK_API}} = configs;\r\n\r\n/** Get list action start */\r\n\r\ntype GetTaskListActionPayload = {\r\n    items? : TaskDTO.Task[];\r\n    status : STATUS;\r\n    error? : string;\r\n}\r\n\r\ninterface GetTaskListAction extends Action<ACTIONS_TYPES.GET_TASK_LIST> {\r\n    payload: GetTaskListActionPayload\r\n}\r\n\r\nexport function getTaskList(payload : GetTaskListActionPayload) : GetTaskListAction {\r\n    return {\r\n        type :  ACTIONS_TYPES.GET_TASK_LIST,\r\n        payload \r\n    }\r\n}\r\n\r\nexport  function getTaskListAsync() : ThunkResult<void> {\r\n    return async (dispatch,getState) => {\r\n        try {\r\n            const {status} = getState().main.taskList;\r\n            if(status === STATUS.LOADING) {\r\n                return;\r\n            }\r\n            dispatch(getTaskList({\r\n                status: STATUS.LOADING\r\n            }))\r\n            const {uri,method} = TASK_API.getList;\r\n            const response = await fetch(uri,{\r\n                method\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Ошибка сети');\r\n            }\r\n            const data : TaskDTO.GetTaskListResonse = await response.json();\r\n            if(data.success) {\r\n                dispatch(getTaskList({\r\n                    status: STATUS.SUCCESS,\r\n                    items: data.data\r\n                }))\r\n            } else {\r\n                throw new Error(data.error);\r\n            }\r\n\r\n        } catch (e) {\r\n            dispatch(getTaskList({\r\n                status: STATUS.ERROR,\r\n                error: e.message\r\n            }))\r\n        }\r\n    }\r\n}\r\n\r\n/** Get list action end */\r\n\r\n/** Create action start */\r\n\r\ntype CreateTaskActionPayload = {\r\n    status: STATUS,\r\n    title?: string;\r\n    id?: number;\r\n    error?: string;\r\n}\r\n\r\ninterface CreateTaskAction extends Action<ACTIONS_TYPES.CREATE_TASK> {\r\n    payload: CreateTaskActionPayload\r\n}\r\n\r\nexport function createTask (payload : CreateTaskActionPayload) : CreateTaskAction {\r\n    return {\r\n        type: ACTIONS_TYPES.CREATE_TASK,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function createTaskAsync(title :string) : ThunkResult<void> {\r\n    return async (dispatch,getState) => {\r\n        try {\r\n            dispatch(createTask({\r\n                status: STATUS.LOADING\r\n            }));\r\n            const {uri,method} = TASK_API.create;\r\n            const response = await fetch(uri,{\r\n                method,\r\n                body: JSON.stringify({title} as TaskDTO.CreateTaskInput)\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Ошибка сети');\r\n            }\r\n            const {error,id,success} : TaskDTO.CreateTaskResponse = await response.json();\r\n            if(success) {\r\n                dispatch(createTask({\r\n                    status: STATUS.SUCCESS,\r\n                    id: id,\r\n                    title\r\n                }))\r\n            } else {\r\n                throw new Error(error);\r\n            }\r\n\r\n        } catch (e) {\r\n            dispatch(createTask({\r\n                status: STATUS.ERROR,\r\n                error: e.message\r\n            }))\r\n            throw e;\r\n        } \r\n    }\r\n}\r\n\r\n/** Create action end */\r\n\r\n/** Update action start */\r\ntype UpdateTaskActionPayload = {\r\n    id: number;\r\n    status: STATUS;\r\n    title?: string;\r\n    error?: string;\r\n}\r\n\r\ninterface UpdateTaskAction extends Action<ACTIONS_TYPES.UPDATE_TASK> {\r\n    payload: UpdateTaskActionPayload\r\n}\r\n\r\nexport function updateTask (payload: UpdateTaskActionPayload) : UpdateTaskAction {\r\n    return {\r\n        type: ACTIONS_TYPES.UPDATE_TASK,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function updateTaskAsync (id: number,title: string) : ThunkResult<void> {\r\n    return async (dispatch,getState)=> {\r\n        const status = getState().main.deleteAction.status;\r\n        if(status === STATUS.LOADING) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            dispatch(updateTask({\r\n                id,\r\n                status: STATUS.LOADING\r\n            }));\r\n            const {uri,method} = TASK_API.update;\r\n            const response = await fetch(uri(id),{\r\n                method,\r\n                body: JSON.stringify({title} as TaskDTO.UpdateTaskInput)\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Ошибка сети');\r\n            }\r\n            const data : TaskDTO.UpdateTaskResponse = await response.json();\r\n            if(data.success) {\r\n                dispatch(updateTask({\r\n                    id,\r\n                    status: STATUS.SUCCESS,\r\n                    title\r\n                }))\r\n            } else {\r\n                throw new Error(data.error);\r\n            }\r\n\r\n        } catch (e) {\r\n            dispatch(updateTask({\r\n                id,\r\n                status: STATUS.ERROR,\r\n                error: e.message\r\n            }))\r\n            throw e;\r\n        } \r\n\r\n    }\r\n}\r\n\r\n/** Update action end */\r\n\r\n/** Delete action start */\r\n\r\ntype DeleteActionPayload  = {\r\n    id: number;\r\n    status: STATUS;\r\n    error?: string;\r\n}\r\n\r\ninterface DeleteTaskAction extends Action<ACTIONS_TYPES.DELETE_TASK> {\r\n    payload: DeleteActionPayload\r\n}\r\n\r\nexport function deleteTask(payload : DeleteActionPayload) : DeleteTaskAction {\r\n    return {\r\n        type :  ACTIONS_TYPES.DELETE_TASK,\r\n        payload \r\n    }\r\n}\r\n\r\nexport function deleteTaskAsync(id :number) : ThunkResult<void> {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(deleteTask({\r\n                id,\r\n                status: STATUS.LOADING\r\n            }));\r\n            const {uri,method} = TASK_API.delete;\r\n            const response = await fetch(uri(id),{\r\n                method\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Ошибка сети');\r\n            }\r\n            const data : TaskDTO.DeleteTaskResponse = await response.json();\r\n            if(data.success) {\r\n                dispatch(deleteTask({\r\n                    status: STATUS.SUCCESS,\r\n                    id\r\n                }))\r\n            } else {\r\n                throw new Error(data.error);\r\n            }\r\n\r\n        } catch (e) {\r\n            dispatch(deleteTask({\r\n                id,\r\n                status: STATUS.ERROR,\r\n                error: e.message\r\n            }))\r\n        } \r\n    }\r\n}\r\n\r\n/** Delete action  end */\r\n\r\n\r\n\r\nexport type AllActions =  GetTaskListAction | DeleteTaskAction | CreateTaskAction | UpdateTaskAction;","export default {\r\n    endpoints: {\r\n        TASK_API: {\r\n            getList: {\r\n                uri: 'https://test.megapolis-it.ru/api/list',\r\n                method: 'GET'\r\n            },\r\n            create: {\r\n                uri: 'https://test.megapolis-it.ru/api/list',\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n                uri: (id : number) => `https://test.megapolis-it.ru/api/list/${id}`,\r\n                method: 'POST'\r\n            },\r\n            delete: {\r\n                uri: (id : number) => `https://test.megapolis-it.ru/api/list/${id}`,\r\n                method: 'DELETE'\r\n            },\r\n        }\r\n    }\r\n}","import {getTaskListAsync,deleteTaskAsync,createTaskAsync,updateTaskAsync} from './Main/actions';\r\n\r\n\r\nexport default {\r\n    Main: {\r\n        getTaskListAsync,\r\n        deleteTaskAsync,\r\n        createTaskAsync,\r\n        updateTaskAsync\r\n    }\r\n}","import styled from 'styled-components';\r\n\r\nexport const Table = styled.table`\r\n    width: 100%;\r\n    text-align: left;\r\n    table-layout: fixed;\r\n    border: 1px solid #E6E6E6;\r\n    border-radius: ${({theme : {borderRadius}}) => borderRadius};\r\n`;\r\n\r\nexport const Row = styled.tr`\r\n    vertical-align: middle;\r\n    & > td {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n    td:nth-child(1) {\r\n        width: 20%;\r\n    }\r\n    td:nth-child(2) {\r\n    }\r\n    td:last-child {\r\n        width: 83px;\r\n        & > svg:first-child {\r\n            margin-right: 28px;\r\n        }\r\n    }\r\n    ${({theme : {max,breakpoints}}) => `\r\n        ${max(breakpoints.mobile)} {\r\n            td:last-child {\r\n                width: 66px;\r\n                & > svg:first-child {\r\n                    margin-right: 16px;\r\n                }\r\n            }\r\n        }\r\n    `}  \r\n`;\r\n\r\ninterface CellProps {\r\n    width?: string;\r\n}\r\n\r\nexport const Cell = styled.td<CellProps>`\r\n    padding: 16px 0 16px 21px;\r\n    border: 1px solid #E6E6E6;\r\n    line-height: 17px;\r\n    vertical-align: middle;\r\n    ${({theme : {max,breakpoints}}) => `\r\n        ${max(breakpoints.tablet)} {\r\n            padding: 16px 0 16px 12px;\r\n        }\r\n        ${max(breakpoints.mobile)} {\r\n            padding: 16px 5px 16px 9px;\r\n        }\r\n    `}    \r\n`;\r\n\r\nexport const Basket = styled.svg`\r\n    width: 18px;\r\n    height: 22px;\r\n    fill: #F4583F;\r\n    cursor: pointer;\r\n    transition: fill .2s, transform .2s; \r\n    &:hover {\r\n        fill: #1890ff;\r\n        transform: scale(1.2);\r\n    }\r\n`;\r\n\r\nexport const Pancel = styled.svg`\r\n    width: 22px;\r\n    height: 22px;\r\n    fill: #666666;\r\n    cursor: pointer;\r\n    transition: fill .2s, transform .2s; \r\n    &:hover {\r\n        fill: #1890ff;\r\n        transform: scale(1.2);\r\n    }\r\n`;","import React from 'react';\r\nimport {Row,Cell,Basket,Pancel} from './styles';\r\n\r\nexport type BaseItem = {\r\n    id: number;\r\n} \r\n\r\n\r\ninterface Props  {\r\n    item: BaseItem;\r\n    onDelete(item: BaseItem): void;\r\n    onEdit(item: BaseItem): void;\r\n}\r\nconst TableRow : React.FC<Props> = ({item,onDelete,onEdit}) => {\r\n    const handleDelete = () => {\r\n        onDelete(item);\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        onEdit(item);\r\n    }\r\n\r\n    const cells = Object.keys(item).map((prop,index ) => {\r\n        if(prop === 'id') {\r\n            return <Cell key={index}>Задача №{item[prop]}</Cell>\r\n        }\r\n        return <Cell key={index}>{(item as any)[prop]}</Cell>\r\n    })\r\n    return(\r\n        <Row >\r\n            {cells}\r\n            <Cell>\r\n                <Pancel onClick={handleEdit}>\r\n                    <use xlinkHref=\"/sprite.svg#pancel\"/>\r\n                </Pancel>\r\n                <Basket onClick={handleDelete} >\r\n                    <use xlinkHref=\"/sprite.svg#basket\"/>\r\n                </Basket>\r\n            </Cell>\r\n        </Row>\r\n    );    \r\n}\r\n\r\nexport default React.memo(TableRow,(prevProps,nextProps) => {\r\n    if(prevProps.item.id === nextProps.item.id) {\r\n        return true;\r\n    }\r\n    return false;\r\n});","import React, { useCallback } from 'react';\r\nimport {Table} from './styles';\r\nimport Row,{BaseItem} from './row';\r\n\r\nexport type TableDeleteHandler<T = BaseItem> =  {\r\n    (values : T): void;\r\n}\r\n\r\nexport type TableEditHandler<T = BaseItem> =  {\r\n    (values : T): void;\r\n}\r\n\r\ninterface Props {\r\n    items: Array<BaseItem>;\r\n    onDelete?: TableDeleteHandler\r\n    onEdit?: TableEditHandler\r\n}\r\n\r\nconst CustomTable : React.FC<Props> = ({items,onDelete,onEdit}) => {\r\n    const handleDelete = useCallback((item : BaseItem)=>{\r\n        if(typeof onDelete === 'function') {\r\n            onDelete(item);\r\n        }\r\n    },[onDelete])\r\n    const handleEdit = useCallback((item : BaseItem)=>{\r\n        if(typeof onEdit === 'function') {\r\n            onEdit(item);\r\n        }\r\n    },[onEdit])\r\n    const Rows = items.map(item => {\r\n        return <Row onDelete={handleDelete} onEdit={handleEdit} item={{...item}} key={item.id}/>\r\n    })\r\n    \r\n    return (\r\n        <Table>\r\n            <tbody>\r\n                {Rows}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n};\r\nexport default React.memo(CustomTable);","import styled from 'styled-components';\r\nimport {Field} from 'formik';\r\n\r\nexport const InputWrapper = styled.div`\r\n    position: relative;\r\n    text-align: left;\r\n`;\r\n\r\n\r\nexport const InputField = styled(Field)`\r\n    ${({theme : {colors,borderRadius}}) => `\r\n        color: ${colors.fonts.main};\r\n        background-color: ${colors.input.background};\r\n        border: 1px solid transparent;\r\n        border-radius: ${borderRadius};\r\n        transition: background-color .2s, color .2s;\r\n        height: 40px;\r\n        width: calc(100% - 12px);\r\n        padding-left: 10px;\r\n        &:focus {\r\n            border: 1px solid #E6E6E6;\r\n            outline: none;\r\n            background-color: ${colors.input.backgroundFocus};\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const InputLabel = styled.label`\r\n    margin-bottom: 12px;\r\n    line-height: 16px;\r\n    display: block;\r\n`\r\n\r\nexport const InputErrorDescription = styled.span`\r\n    ${({theme : {colors}}) => `\r\n        color: ${colors.fonts.error};\r\n        background-color: transparent;\r\n        font-size: 12px;\r\n        line-height: 14px;\r\n        position: absolute;\r\n        bottom: -20px;\r\n        left: 0;\r\n    `}\r\n`;","import React,{InputHTMLAttributes} from 'react';\r\nimport {\r\n    InputWrapper,\r\n    InputField,\r\n    InputLabel,\r\n    InputErrorDescription\r\n} from './styles';\r\n\r\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\r\n    error?: string;\r\n    label?: string;\r\n}\r\n\r\nconst Input : React.FC<Props> = (props) => {\r\n    const {error,label} = props;\r\n    return (\r\n        <InputWrapper>\r\n            {label && <InputLabel htmlFor={props.id}>{label}</InputLabel>}\r\n            <InputField {...props}/>\r\n            {error && <InputErrorDescription>{error}</InputErrorDescription>}\r\n        </InputWrapper>\r\n    );\r\n}\r\n\r\n\r\nexport default Input;","import styled from 'styled-components';\r\n\r\ninterface ButtonProps {\r\n    color: string;\r\n}\r\nexport const Button = styled.button<ButtonProps>`\r\n    ${({color,theme : {borderRadius,colors,max,breakpoints}}) => `\r\n        min-width: 148px;\r\n        border: 1px solid ${color};\r\n        border-radius: ${borderRadius};\r\n        height: 35px;\r\n        color: ${colors.fonts.main};\r\n        background-color: ${colors.main};\r\n        padding: 0 25px;\r\n        text-align: center;\r\n        transition: background-color 200ms,color 200ms;\r\n        cursor: pointer;\r\n        &:hover {\r\n            color: ${colors.fonts.hover};\r\n            background-color: ${color};\r\n        }\r\n        &:focus {\r\n            color: ${colors.fonts.hover};\r\n            background-color: ${color};\r\n        }\r\n        ${max(breakpoints.mobile)} {\r\n            min-width: 123px;\r\n        }\r\n    `}\r\n`;\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n    text-align: left;\r\n    font-size: 32px;\r\n    line-height: 37px;\r\n    font-family: Roboto-Bold;\r\n    ${({theme : {max,breakpoints}}) => `\r\n        ${max(breakpoints.mobile)} {\r\n            font-size: 26px;\r\n        }\r\n    `}   \r\n`;\r\n\r\nexport default Title;","import styled from 'styled-components';\r\n\r\nexport const MainWrapper = styled.main`\r\n    margin: 40px 0;\r\n    padding: 0 64px;\r\n    ${({theme : {max,breakpoints}}) => `\r\n        ${max(breakpoints.tablet)} {\r\n            padding: 0 30px;\r\n        }\r\n        ${max(breakpoints.mobile)} {\r\n            padding: 0 10px;\r\n        }\r\n    `}\r\n`;\r\n\r\nexport default MainWrapper;","import styled from 'styled-components';\r\n\r\n\r\nexport const TransitionName = 'modal'\r\n\r\nexport const Overlay = styled.div`\r\n    ${({theme : {max,breakpoints}}) => `\r\n        position: absolute;\r\n        top: 0;\r\n        bottom: 0;\r\n        display: flex;\r\n        width: 100%;\r\n        z-index: 3;\r\n        justify-content: center;\r\n        align-items: center;\r\n        display: flex;\r\n        transition: opacity .2s, backdrop-filter .2s;\r\n        ${max(breakpoints.mobile)} {\r\n            align-items: flex-start;\r\n        }\r\n        &.${TransitionName}-exited {\r\n            visibility: hidden;\r\n            opacity: 0;\r\n        }\r\n        &.${TransitionName}-exiting {\r\n            opacity: 0;\r\n        }\r\n        &.${TransitionName}-entering {\r\n            opacity: 1;\r\n        }\r\n    `}\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n    ${({theme : {borderRadius,max,breakpoints}}) => `\r\n        border: 1px solid #F2F2F2;\r\n        border-radius: ${borderRadius};\r\n        position: relative;\r\n        background-color: #ffffff;\r\n        padding: 30px 32px 32px;\r\n        transition: transform 200ms ease-in-out;\r\n        ${max(breakpoints.mobile)} {\r\n            width: calc(100% - 20px);\r\n            padding: 18px 10px 10px;\r\n            border-radius:  0;\r\n        }\r\n        &.${TransitionName}-exited {\r\n            transform: translateY(calc(-50vh - 50%));\r\n        }\r\n        &.${TransitionName}-exiting {\r\n            transform: translateY(calc(-50vh - 50%));\r\n        }\r\n    `}\r\n`\r\n\r\n\r\nexport const Cross = styled.svg`\r\n    ${({theme : {max,breakpoints}}) => `    \r\n        cursor: pointer;\r\n        width: 14px;\r\n        height: 14px;\r\n        fill: #FF0000;\r\n        position: absolute;\r\n        right: 32px;\r\n        top: 30px;\r\n        z-index: 1;\r\n        transition: transform 200ms;\r\n        &:hover {\r\n            transform: scale(1.1);\r\n        }\r\n        ${max(breakpoints.mobile)} {\r\n            top: 18px;\r\n            right: 10px;\r\n        }\r\n    `}    \r\n`;\r\n\r\n\r\nexport const Background = styled.div`\r\n    transition: opacity .15s linear;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: 2;\r\n    background-color: #000;\r\n    transition: opacity 200ms;\r\n    opacity: 0.5;\r\n    &.${TransitionName}-exited {\r\n        visibility: hidden;\r\n        opacity: 0;\r\n    }\r\n    &.${TransitionName}-exiting {\r\n        opacity: 0;\r\n    }\r\n    &.${TransitionName}-entering {\r\n        opacity: 0.5;\r\n    }\r\n`;\r\n","import React, { useCallback, useEffect} from 'react';\r\nimport {createPortal} from 'react-dom';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport {\r\n    Background,\r\n    Overlay,\r\n    Wrapper,\r\n    Cross,\r\n    TransitionName\r\n} from './styles';\r\n\r\n\r\ninterface Props {\r\n    visibility? : boolean,\r\n    onClose() : void; \r\n}\r\n\r\nexport const Popup : React.FC<Props> = ({children,visibility = true,onClose}) => {\r\n    const root = document.getElementById('modal');\r\n    \r\n    useEffect(()=>{\r\n        if(visibility) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'auto';\r\n        }\r\n    },[visibility]);\r\n\r\n\r\n\r\n    const handleClose : React.MouseEventHandler = useCallback((e) => {\r\n        const target = e.target as any;\r\n        if(target.dataset.close) {\r\n            if(typeof onClose === 'function') {\r\n                onClose();\r\n            } else {\r\n                throw new Error('handler onClose required!');\r\n            }    \r\n        }\r\n    },[]);// eslint-disable-line react-hooks/exhaustive-deps\r\n    \r\n    \r\n    return createPortal(\r\n            <CSSTransition\r\n                in={visibility}\r\n                classNames={TransitionName}\r\n                timeout={200} \r\n            >\r\n                {state => (\r\n                    <React.Fragment>\r\n                        <Background className={`${TransitionName}-${state}`} />\r\n                        <Overlay className={`${TransitionName}-${state}`} data-close={true} onClick={handleClose}>\r\n                            <Wrapper className={`${TransitionName}-${state}`}>\r\n                                <Cross data-close={true} onClick={handleClose}>\r\n                                    <use xlinkHref=\"/sprite.svg#cross\"/>\r\n                                </Cross>\r\n                                {children}\r\n                            </Wrapper>\r\n                        </Overlay>\r\n                    </React.Fragment>\r\n                )}\r\n            </CSSTransition>\r\n    ,root as HTMLElement);\r\n}","import styled from 'styled-components';\r\n\r\n\r\nexport const TitleWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 32px;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    width: 462px;\r\n    ${({theme :{max,breakpoints}}) => `\r\n        ${max(breakpoints.mobile)} {\r\n            width: 100%;\r\n        }\r\n    `}\r\n`;\r\ninterface Props {\r\n    align: string;\r\n}\r\nexport const ChildrenWrapper = styled.div<Props>`\r\n    margin-top: 20px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content:${({align}) => align === 'right' ? 'flex-end' : 'flex-start'};\r\n    ${({theme :{max,breakpoints}}) => `\r\n        ${max(breakpoints.mobile)} {\r\n            margin-top: 30px;\r\n            justify-content: center;\r\n        }\r\n    `}\r\n`;","import React from 'react';\r\nimport {Input} from '@components/index';\r\nimport {Wrapper,ChildrenWrapper} from './styles';\r\nimport {Formik,Form,FormikHelpers} from 'formik';\r\n\r\n\r\nexport interface FormikValues {\r\n    title: string;\r\n}\r\n\r\ninterface Props {\r\n    description?: string;\r\n    disabled? : boolean;\r\n    error?: string;\r\n    align?: string;\r\n    onSuccess?(): void;\r\n    onFocus?(): void;\r\n    onBlur?(): void;\r\n    onChange?(value: string): void;\r\n    onSubmit?(title: string): Promise<void>\r\n}\r\n\r\n\r\nconst Task : React.FC<Props> = ({description = '',disabled = false,children,align = 'right',onSuccess,onFocus,onBlur,onSubmit,onChange}) => {\r\n\r\n    const initialValues : FormikValues =  {\r\n        title: description\r\n    };\r\n    const validate = ({title} : FormikValues) => {\r\n        const errors = {} as any;\r\n        if(title.length === 0) {\r\n            errors.title = 'Заголовок не может быть пустым';\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    const handleSubmit = async ({title} : FormikValues,actions : FormikHelpers<FormikValues>)=> {\r\n        try{\r\n            if(typeof onSubmit === 'function')  {\r\n                await onSubmit(title);\r\n            }\r\n            if(typeof onSuccess === 'function') {\r\n                onSuccess();\r\n            }\r\n        } catch (e) {\r\n            actions.setErrors({title: e.message});\r\n        }\r\n    }\r\n\r\n    const handleFocus = () => {\r\n        if(typeof onFocus === 'function') {\r\n            onFocus();\r\n        }\r\n    }\r\n\r\n\r\n    const customHandleBlur = () => {\r\n        if(typeof onBlur === 'function') {\r\n            onBlur();\r\n        }\r\n    }\r\n\r\n    const handleChangeCustom : React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if(typeof onChange === 'function') {\r\n            onChange(e.target.value);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Formik enableReinitialize initialValues={initialValues} onSubmit={handleSubmit} validate={validate} >\r\n                {({ errors,handleChange,handleBlur }) => (\r\n                    <Form>\r\n                        <Input onChange={(e)=>{\r\n                                handleChange(e);\r\n                                handleChangeCustom(e);\r\n                            }} onFocus={handleFocus} onBlur={(e) => {\r\n                                handleBlur(e);\r\n                                customHandleBlur();\r\n                            }} disabled={disabled} label=\"Краткое описание\" error={errors.title} name=\"title\" id=\"title\"/>\r\n                        <ChildrenWrapper align={align}>{children}</ChildrenWrapper>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default  Task;","import React, { useCallback} from 'react';\r\nimport {\r\n    Button,\r\n    Popup\r\n} from '@components/index';\r\nimport Task from '@containers/task';\r\nimport Actions from '@store/allActions';\r\nimport { useThunkDispatch } from '@store/index';\r\n\r\ninterface Props {\r\n    visibility : boolean;\r\n    onClose(): void;\r\n}\r\n\r\nconst NewTask : React.FC<Props> = ({visibility,onClose}) => {\r\n    const dispatch = useThunkDispatch();\r\n\r\n\r\n    const handleSubmit = useCallback(async (title: string)=>{\r\n        await dispatch(Actions.Main.createTaskAsync(title));\r\n    },[])\r\n\r\n    const handleClose = useCallback(() => {\r\n        if(typeof onClose === 'function') {\r\n            onClose();\r\n        }\r\n    },[onClose])\r\n\r\n    \r\n    return(\r\n        <Popup visibility={visibility} onClose={handleClose}>\r\n            <Task onSuccess={handleClose} onSubmit={handleSubmit}>\r\n                <Button color='#39B54A'>Создать</Button>\r\n            </Task>\r\n        </Popup>\r\n    );\r\n}\r\n\r\nexport default React.memo(NewTask,({visibility},nextProps)=>{\r\n    return visibility === nextProps.visibility;\r\n});","import React, { useCallback, useEffect, useState } from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {useThunkDispatch} from '@store/index'\r\nimport Actions from '@store/allActions';\r\nimport {\r\n    Button,\r\n    Title,\r\n    MainWrapper,\r\n    Table,\r\n} from '@components/index';\r\nimport {TitleWrapper} from './styles';\r\nimport {useHistory} from 'react-router-dom';\r\nimport NewTask from './newTask';\r\n\r\n\r\nconst {Main} = Actions;\r\n\r\n\r\nconst List : React.FC = ()=>{\r\n    const [popup,setPopup] = useState(false);\r\n    const {taskList: {items}} = useSelector(({main}) => main);\r\n    const history = useHistory();\r\n    const dispatch = useThunkDispatch();\r\n\r\n    useEffect(()=> {\r\n        dispatch(Main.getTaskListAsync());\r\n    },[dispatch]);\r\n\r\n    const openPopup = ()=> {\r\n        setPopup(true);\r\n    }\r\n\r\n    const closePopup = useCallback(()=> {\r\n        setPopup(false);\r\n    },[])\r\n    \r\n    const handleDelete = useCallback((value : any) => {\r\n        dispatch(Main.deleteTaskAsync(value.id));\r\n    },[]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const handleEdit = useCallback((value : any) => {\r\n        //temporate redirect to detail page\r\n        history.push(`/task/${value.id}`);\r\n    },[]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    \r\n    return (\r\n        <MainWrapper>\r\n            <TitleWrapper> \r\n                <Title>Список задач</Title>\r\n                <Button onClick={openPopup} color='#39B54A'>Добавить</Button>\r\n            </TitleWrapper>\r\n            <Table onDelete={handleDelete} onEdit={handleEdit} items={items}/>\r\n            <NewTask onClose={closePopup} visibility={popup} />\r\n        </MainWrapper>\r\n    )\r\n}\r\n\r\nexport default List;","import styled from 'styled-components';\r\n\r\n\r\nexport const Container = styled.div`\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n    margin-top: 10px;\r\n`;","\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport {\r\n    Button,\r\n    Title,\r\n    MainWrapper,\r\n} from '@components/index';\r\nimport Task from '@containers/task'\r\nimport {useParams} from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\nimport {Container,ButtonWrapper} from './styles';\r\nimport { useThunkDispatch } from '@store/index';\r\nimport { useSelector } from 'react-redux';\r\nimport Actions from '@store/allActions';\r\nimport { Task as ITask} from '@models/TaskDTO';\r\n\r\n\r\nconst TaskView : React.FC = () => {\r\n    let { id } = useParams<{id: string}>();\r\n    const dispatch = useThunkDispatch();\r\n    const items = useSelector(state => state.main.taskList.items);\r\n    const [title,setTitle] = useState('');\r\n    const cachedTask = useRef(null as null | ITask);\r\n    const [edit,setEdit] = useState(false);\r\n    \r\n\r\n    useEffect(()=>{\r\n        if(items.length === 0) {\r\n            dispatch(Actions.Main.getTaskListAsync())\r\n        } else {\r\n            const item = items.find((item) => item.id === parseInt(id));\r\n            if(item) {\r\n                cachedTask.current = item;\r\n                setTitle(item.title);\r\n            }\r\n        }\r\n    },[items])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    const handleBlur = useCallback(()=>{\r\n        const prevTitle = (cachedTask.current as ITask).title;\r\n        if(title === prevTitle) {\r\n            setEdit(false);\r\n        }\r\n    },[title]);\r\n\r\n    const handleFocus = useCallback(()=>{\r\n        setEdit(true);\r\n    },[])\r\n\r\n    const handleChange  = useCallback((value : string)=>{\r\n        setTitle(value);\r\n    },[])\r\n\r\n\r\n    const handleSubmit  = useCallback(async (value : string)=>{\r\n        if(!edit) {\r\n            return;\r\n        }\r\n        const {id,title} = (cachedTask.current as ITask)\r\n        try {\r\n            await dispatch(Actions.Main.updateTaskAsync(id,value));\r\n            (cachedTask.current as ITask).title = title;\r\n        } catch (e) {\r\n            setTitle(title);\r\n            throw e;\r\n        } finally {\r\n            setEdit(false);\r\n        }\r\n    },[edit])// eslint-disable-line react-hooks/exhaustive-deps\r\n    \r\n    return (\r\n        <MainWrapper>\r\n            <Title>Задача №{id}</Title>\r\n            <Container>\r\n                <Task description={title} align=\"left\" onBlur={handleBlur} onFocus={handleFocus} onChange={handleChange} onSubmit={handleSubmit}>\r\n                    <ButtonWrapper>\r\n                        {edit ? <Button color='#39B54A'>изменить</Button> : <Link to=\"/\"><Button color='#0071BC'>Вернуться в список</Button></Link>}\r\n                    </ButtonWrapper>\r\n                </Task>\r\n            </Container>\r\n        </MainWrapper>\r\n    );\r\n}\r\n\r\nexport default TaskView;","import React from 'react';\nimport './css/index.css';\nimport {ThemeProvider} from 'styled-components';\nimport {MainTheme} from './theme/defaultTheme';\nimport ListView from '@views/list';\nimport store from '@store/index';\nimport {Provider} from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport TaskView from '@views/task';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={MainTheme}>\n        <Provider store={store}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" render={()=> <ListView/>}/>\n              <Route path=\"/task/:id\" render={()=> <TaskView/>}/>\n            </Switch>\n          </Router>\n        </Provider>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}