{"version":3,"sources":["components/WheelSlider/style.module.sass","layout/Header/index.tsx","components/WheelSlider/index.tsx","App.tsx","serviceWorker.ts","index.tsx","layout/Header/style.module.sass"],"names":["module","exports","Header","className","styles","wrapper","logo","width","height","xlinkHref","nav","city","href","favorite","search","type","console","log","STATES","prev","transform","zIndex","active","next","next2","opacity","prev2","move","percent","max","min","scalePerPercent","Math","abs","scale","translate","WheelSlider","props","useState","setTransition","isAnimation","setAnimation","start","end","setIndexes","products","slice","data","setData","position","fingers","timestamp","touchStart","setTouchStart","prevTouch","setPrevTouch","setPercent","isTouch","setTouch","useEffect","setTimeout","leftClickHandler","rightClickHandler","circles","map","el","index","middle","floor","key","circle","Fragment","onTouchMove","e","Array","from","touches","reduce","clientX","clientY","length","timeStamp","spin","onTouchEnd","speed","style","element","onTransitionEnd","display","alignItems","justifyContent","src","image","alt","buttons","onClick","left","right","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f3b8b43f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__1f2iB\",\"element\":\"style_element__25mS_\",\"element--disabled\":\"style_element--disabled__2UId0\",\"wrapper--stop\":\"style_wrapper--stop__3LXIT\",\"buttons\":\"style_buttons__19E3i\",\"nav\":\"style_nav__RewZS\",\"circle\":\"style_circle__19HLJ\",\"circle--active\":\"style_circle--active__1kqmV\",\"left\":\"style_left__2ukc_\",\"right\":\"style_right__OVoem\"};","import React from 'react';\r\nimport styles from './style.module.sass';\r\n\r\nconst Header : React.FC = () => {\r\n    return (\r\n        <header>\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.logo}>\r\n                    <svg width={104} height={62}>\r\n                        <use xlinkHref=\"/sprite.svg#logo\" />\r\n                    </svg>\r\n                    <span>free.pick</span>\r\n                </div>\r\n                <nav className={styles.nav}>\r\n                    <a className={styles.city} href=\"/\">Москва</a>\r\n                    <a href=\"/\">Оплата</a>\r\n                    <a href=\"/\">Доставка</a>\r\n                    <a href=\"/\">Возврат</a>\r\n                    <a href=\"/\" className={styles.favorite}>\r\n                        <svg width={36} height={30}>\r\n                            <use xlinkHref='/sprite.svg#favorite' />\r\n                        </svg>\r\n                        <span>3</span>\r\n                    </a>\r\n                    <a href=\"/\">\r\n                        <svg width={34} height={30}>\r\n                            <use xlinkHref='/sprite.svg#profile' />\r\n                        </svg>\r\n                    </a>\r\n                    <a href=\"/\">\r\n                        <svg width={30} height={30}>\r\n                            <use xlinkHref='/sprite.svg#basket' />\r\n                        </svg>\r\n                    </a>\r\n                </nav>\r\n            </div>\r\n            <div className={styles.search}>\r\n                <input type=\"text\"/>\r\n                <button type=\"submit\">Найти</button>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './style.module.sass';\r\n\r\nconsole.log(styles);\r\n\r\nconst STATES = {\r\n    prev : {transform: 'scale(0.33) translate(-200%)',zIndex: 2} as React.CSSProperties,\r\n    active : {transform: 'scale(1) translate(0)',zIndex: 100} as React.CSSProperties,\r\n    next: {transform: 'scale(0.33) translate(200%)',zIndex: 2} as React.CSSProperties,\r\n    next2: {transform: 'scale(0) translate(0)',opacity: 0,zIndex: 1} as React.CSSProperties,\r\n    prev2: {transform: 'scale(0) translate(0)',opacity: 0,zIndex: 1} as React.CSSProperties\r\n}\r\n\r\nexport interface Product {\r\n    image : string\r\n}\r\n\r\ninterface Props {\r\n    products : Array<Product>\r\n} \r\n/** \r\n2x = 1160\r\n1x = 580\r\n0.665 -200 50\r\n0.665 75.18796992481202\r\n\r\n0.933 116 10\r\n0.7989999999999999 348 30\r\n\r\n100\r\n0.32999999999999996 303.03030303030306\r\n50\r\n0.665 50.18796992481202\r\n\r\n30\r\n0.7989999999999999 25.03128911138924\r\n*/\r\nfunction move(percent : number,{max,min} : {max: number,min:number},width : number) {\r\n    const scalePerPercent = Math.abs(max-min)/100\r\n    const scale = Math.abs(max - Math.abs(percent * scalePerPercent));\r\n    const translate = ((width/(scale*width)) * percent)*2/3\r\n    return {scale,translate};\r\n}\r\n\r\nfunction spin (percent : number) {\r\n    const next = percent < 0 ? move(100-Math.abs(percent),{max: 1,min :0.33},580) : move(100-Math.abs(percent),{max: 0,min :0.33},580);\r\n    const prev = percent > 0 ? move(-100+percent,{max: 1,min :0.33},580) : move(-100-percent,{max: 0,min :0.33},580);\r\n    return {\r\n        active: move(percent,{max: 1,min :0.33},580),\r\n        next,\r\n        prev\r\n    };\r\n}\r\n\r\n\r\n\r\nconst WheelSlider : React.FC<Props> = (props) => {\r\n    const [{prev2,prev,active,next,next2}, setTransition] = useState(STATES);\r\n    const [isAnimation,setAnimation] = useState(false);\r\n    const [{start,end},setIndexes] = useState({start : 0,end : 5});\r\n    const [data,setData] = useState(props.products.slice(start,end));\r\n    const [touchStart,setTouchStart] = useState({position: [0,0],fingers:0,timestamp : 0});\r\n    const [prevTouch,setPrevTouch] = useState([0,0]);\r\n    const [percent,setPercent] = useState(0);\r\n    const [isTouch,setTouch] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(!isAnimation && !isTouch) {\r\n            setTransition(STATES);\r\n            setData(props.products.slice(start,end));\r\n            setTimeout(()=>{\r\n                setAnimation(true);\r\n            },100)\r\n        }\r\n    },[isAnimation])\r\n\r\n    const handleTouchMove : React.TouchEventHandler<HTMLDivElement> = (e) => {\r\n        const touchesSum = Array.from(e.touches).reduce((prev,next)=>{\r\n            prev[0] += next.clientX;\r\n            prev[1] += next.clientY;\r\n            return prev;\r\n        },[0,0]);\r\n        const position = touchesSum.map(el=> el/e.touches.length)\r\n        if(touchStart.fingers === 0) {\r\n            setTouchStart({position,fingers : e.touches.length,timestamp : e.timeStamp});\r\n            setTouch(true);\r\n        } else {\r\n            const length = position[0] - (prevTouch[0]===0 ? position[0] : prevTouch[0]);\r\n            setPercent(percent + (length/5.8))\r\n            setPrevTouch(position);\r\n            const data = spin(percent)\r\n            setTransition({\r\n                prev2,\r\n                prev : {transform: `scale(${data.prev.scale}) translate(${data.prev.translate}%)`,zIndex: 1},\r\n                active : {transform: `scale(${data.active.scale}) translate(${data.active.translate}%)`,zIndex: 2},\r\n                next : {transform: `scale(${data.next.scale}) translate(${data.next.translate}%)`,zIndex: 2},\r\n                next2\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleTouchEnd : React.TouchEventHandler<HTMLDivElement> = (e) => {\r\n        setPrevTouch([0,0]);\r\n        const {timestamp} = touchStart;\r\n        const speed = Math.abs(percent)/(e.timeStamp-timestamp);\r\n        setTouchStart({position: [0,0],fingers: 0,timestamp : 0})\r\n        setTouch(false);\r\n        if((percent < -30 || percent > 30) || speed > 0.15) {\r\n            if(percent < 0) {\r\n                rightClickHandler();\r\n            } else {\r\n                leftClickHandler()\r\n            }\r\n        } else {\r\n            setTransition(STATES);\r\n        }\r\n        setPercent(0);\r\n    }\r\n\r\n\r\n\r\n    const leftClickHandler = () =>{\r\n        if(!isAnimation){\r\n            return\r\n        }\r\n        setTransition({\r\n            prev: STATES.active,\r\n            prev2 : STATES.prev,\r\n            active: STATES.next,\r\n            next: STATES.next2,\r\n            next2: STATES.next2\r\n        });\r\n        setIndexes({start : start === 0? 0:  start-1,end: end-1})\r\n    }\r\n\r\n    const rightClickHandler = () =>{\r\n        setTransition({\r\n            prev: STATES.prev2,\r\n            prev2 : STATES.prev2,\r\n            active: STATES.prev,\r\n            next: STATES.active,\r\n            next2: STATES.next\r\n        });\r\n        setIndexes({start : start+1,end: end+1})\r\n    }\r\n\r\n\r\n    const circles = props.products.map((el,index)=>{\r\n        const middle = Math.floor((end - 1 + start) /2)\r\n        return <button key={index} className={`${styles.circle} ${middle === index ? styles['circle--active'] : '' }`}></button>\r\n    })\r\n    \r\n    return (\r\n        <React.Fragment>\r\n        <div onTouchMove={handleTouchMove} onTouchEnd={handleTouchEnd} className={`${styles.wrapper} ${isAnimation && !isTouch ? '' : styles['wrapper--stop']}`}>\r\n            {(()=>data.map((el,index)=>{\r\n                let style = {};\r\n                let className = `${styles.element} ${index !== 2 ? styles['element--disabled'] : ''}`; \r\n                switch(index) {\r\n                    case 0:\r\n                        style = prev2;\r\n                        break;\r\n                    case 1:\r\n                        style = prev;\r\n                        break;\r\n                    case 2:\r\n                        style = active;\r\n                        break;\r\n                    case 3:\r\n                        style = next;\r\n                        break;\r\n                    case 4:\r\n                        style = next2;\r\n                        break;\r\n                }\r\n                return (\r\n                <div key={index} style={style} onTransitionEnd={()=>{\r\n                    if(index === 2) {\r\n                        setAnimation(false);\r\n                    }\r\n                }}  className={className}>\r\n                    <span>- 30%</span>\r\n                    <svg width={40} height={40}>\r\n                            <use xlinkHref='/sprite.svg#favorite' />\r\n                        </svg>\r\n                    <div style={{height:645,width: 580,display: 'flex',alignItems: 'center',justifyContent: 'center'}}>\r\n                        <img src={el.image} alt=\"\"/>\r\n                    </div>\r\n                </div>);\r\n            }))()}\r\n        </div>\r\n        <div className={styles.buttons}>\r\n            <button onClick={leftClickHandler}> <div className={styles.left}/> </button>\r\n            <div className={styles.nav}>\r\n                {circles}\r\n            </div>\r\n            <button onClick={rightClickHandler}> <div className={styles.right}/> </button>\r\n        </div>\r\n        </React.Fragment>    \r\n    );\r\n}\r\n\r\nexport default WheelSlider;","import React from 'react';\nimport MobileNav,{Link} from './components/MobileNav';\nimport Header from './layout/Header';\nimport WheelSlider,{Product} from './components/WheelSlider';\n\n\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\n\nconst MobileNavData = [\n  {\n    link: '/',\n    logo: '/sprite.svg#home',\n    name : 'Домашняя'\n  },\n  {\n    link: '/product-cart',\n    logo: '/sprite.svg#basket',\n    name : 'Корзина'\n  },\n  {\n    link: '/catalog',\n    logo: '/sprite.svg#catalog',\n    name : 'Каталог'\n  },\n  {\n    link: '/favorite',\n    logo: '/sprite.svg#favorite',\n    name : 'Избранное'\n  },\n  {\n    link: '/profile',\n    logo: '/sprite.svg#profile',\n    name : 'Профиль'\n  },\n] as Array<Link>\n\n\nconst products : Array<Product> = [\n  {image : '/images/cofee-machine.png'},\n  {image : '/images/cofee-machine.png'},\n  {image : '/images/phone.png'},\n  {image : '/images/laptop.png'},\n  {image : '/images/cofee-machine.png'},\n  {image : '/images/cofee-machine.png'},\n  {image : '/images/cofee-machine.png'},\n  {image : '/images/cofee-machine.png'},\n  {image : '/images/cofee-machine.png'},\n  {image : '/images/cofee-machine.png'},\n]\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <WheelSlider products={products}/>\n      {/* <MobileNav links={MobileNavData}/> */}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__3Bgnq\",\"logo\":\"style_logo__2fHhL\",\"nav\":\"style_nav__3XsCu\",\"city\":\"style_city__21U9T\",\"favorite\":\"style_favorite__C-Ex2\",\"search\":\"style_search__3M0YJ\"};"],"sourceRoot":""}